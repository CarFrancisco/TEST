{"CLs":[{"__type":"ST","Var":"Info_General"}],"CMT":"The sensor object is used for digital AND analogic sensor.\u000d\u000a\u000d\u000aOn IAG,  digital sensor will appear as a round LED, while the analog version will be a square filled according to the percentage of the analog input.\u000d\u000a\u000d\u000aIn commissioning, you have several possibility:\u000d\u000a- Digital: I check every edge of the input and store theme in \"Min\/Max\" datas. With this, you can change the state of a sensor, and check if you have\u000d\u000a               a feedback on the IAG\u000d\u000a- Analog: You can use a teaching function if you need. During the teaching, i will store the maximum and the minimum value to define 0-100%\u000d\u000a- All visual feedback on IAG are not filtred!","LRI":1,"RRI":2,"VLs":[]}
{"CLs":[{"__type":"FB","In":[{"__type":"PRM","Arg":"MySensor","IO":true,"Type":"THE\\SENSOR","Var":"Sensor_1"},{"__type":"PF","Arg":"Enabled"},{"__type":"PRM","Arg":"Input","Ix":1,"Type":"BOOL","Var":"DI_Sensor_1"},{"__type":"PRM","Arg":"Use_Debounce","Ix":2,"Type":"BOOL","Var":"true"},{"__type":"PRM","Arg":"DebounceTime","Ix":3,"Type":"TIME","Var":"T#30ms"},{"__type":"PRM","Arg":"Use_LivingTime","Ix":4,"Type":"BOOL","Var":"true"},{"__type":"PRM","Arg":"LivingTime","Ix":5,"Type":"TIME","Var":"T#3s"}],"Ix":7,"Name":"Sensor_Simple","Out":[{"__type":"PRM","Arg":"MySensor","IO":true,"Ix":6,"Type":"THE\\SENSOR","Var":"Sensor_1"},{"__type":"PF","Arg":"ENO"}],"UD":true,"Var":"Config_Simple"}],"CMT":"This object can be used for every sensor of a machine. The basic configuration let you use two option :\u000d\u000a\u000d\u000a1. Debounce: You can define a minimum debounce time, the input need to be at ON during this amount of time to rise \"Sensor.Detection\".\u000d\u000a                      It can be use to filtre noise on input, or to wait an amount of time before rising an alarm\u000d\u000a\u000d\u000a2. LivingTime: Force the output to ON when the input is falling (TOF). It can be use to have a living time for an alarm.\u000d\u000a\u000d\u000a\u000d\u000aChronogram:\u000d\u000a\u000d\u000aInput        __________|¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|____________________|¯¯|___|¯¯|__|¯¯|______|¯¯|______|¯¯|___|¯¯|__|¯¯|__|¯¯¯¯¯¯¯¯¯¯|__________________________________________________\u000d\u000a\u000d\u000aOutput     ___________________|¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|____________________________________|¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|_____________\u000d\u000a\u000d\u000a                                |-- 30 --|                                |----------------- 3000 --------------|                                           |-- 30 --|   |----------------- 3000 --------------| \u000d\u000a","LRI":8,"RRI":9,"VLs":[]}
{"CLs":[{"__type":"FB","In":[{"__type":"PRM","Arg":"MySensor","IO":true,"Type":"THE\\SENSOR","Var":"Sensor_2"},{"__type":"PF","Arg":"Enabled"},{"__type":"PRM","Arg":"Input","Ix":1,"Type":"BOOL","Var":"DI_Sensor_2"},{"__type":"PRM","Arg":"TimeToON","Ix":2,"Type":"TIME","Var":"T#30ms"},{"__type":"PRM","Arg":"TimeToOFF","Ix":3,"Type":"TIME","Var":"T#3s"}],"Ix":8,"Name":"Sensor_Filtered","Out":[{"__type":"PRM","Arg":"MySensor","IO":true,"Ix":4,"Type":"THE\\SENSOR","Var":"Sensor_2"},{"__type":"PF","Arg":"ENO"},{"__type":"PRM","Arg":"NoDetection","Ix":5,"Type":"BOOL","Var":""},{"__type":"PRM","Arg":"Detection","Ix":6,"Type":"BOOL","Var":""},{"__type":"PRM","Arg":"Transition","Ix":7,"Type":"BOOL","Var":""}],"UD":true,"Var":"Config_Filtred"}],"CMT":"The filtered variant works with a Set\/Reset of the output if the input remains in the same state for a certain time.\u000d\u000a\u000d\u000a\u000d\u000aChronogram:\u000d\u000a\u000d\u000aInput        __________|¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|____________________|¯¯|___|¯¯|__|¯¯|______|¯¯|______|¯¯|___|¯¯|__|¯¯|__|¯¯¯¯¯¯¯¯¯¯|__________________________________________________\u000d\u000a\u000d\u000aOutput     ___________________|¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|_____________\u000d\u000a\u000d\u000a                                |-- 30 --|                                |----------------- 3000 --------------|                                                           |----------------- 3000 --------------| \u000d\u000a","LRI":9,"RRI":10,"VLs":[]}
{"CLs":[{"__type":"ST","Var":"Info_ToDo"}],"CMT":"Seems false! No difference with simple??? Need to be tested (and not realy used anymore)\u000d\u000a\u000d\u000aBref, à tester \/ vérifier une fois!","LRI":1,"RRI":2,"VLs":[]}
{"CLs":[{"__type":"FB","In":[{"__type":"PRM","Arg":"MySensor","IO":true,"Type":"THE\\SENSOR","Var":"Sensor_3"},{"__type":"PF","Arg":"Run"},{"__type":"PRM","Arg":"Enabled","Ix":1,"Type":"BOOL","Var":"True"},{"__type":"PRM","Arg":"Input","Ix":2,"Type":"BOOL","Var":"DI_Sensor_3"},{"__type":"PRM","Arg":"Pulse","Ix":3,"Type":"TIME","Var":"T#1s"},{"__type":"PRM","Arg":"Level_On","Ix":4,"Type":"REAL","Var":"80"},{"__type":"PRM","Arg":"Level_Off","Ix":5,"Type":"REAL","Var":"20"}],"Ix":8,"Name":"Sensor_ToAnalog","Out":[{"__type":"PRM","Arg":"MySensor","IO":true,"Ix":6,"Type":"THE\\SENSOR","Var":"Sensor_3"},{"__type":"PF","Arg":"ENO"},{"__type":"PRM","Arg":"AnalogOut","Ix":7,"Type":"REAL","Var":""}],"UD":true,"Var":"Config_ToAnalog"}],"CMT":"This object convert a digital signal in analogic signal. You need to put a time in \"Pulse\", and i will comput the number un cycle at ON during this time. You can find\u000d\u000athe value in \"MyObj.Analog\" or in the output \"AnalogOut\".\u000d\u000a\u000d\u000aThe digital output is used and filtred with \"Level_On\" and \"Level_Off\" to work with hysteresis. The output is SET when the analog value is greater then \"Level_On\" and\u000d\u000aRESET if lower then \"Level_Off\".\u000d\u000a\u000d\u000a\u000d\u000aChronogram:\u000d\u000a\u000d\u000aInput        __________|¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|____________________|¯¯|___|¯¯|__|¯¯|______|¯¯|______|¯¯|___|¯¯|__|¯¯|__|¯¯¯¯¯¯¯¯¯¯|__________|¯¯¯¯¯¯¯¯|______________________________\u000d\u000a\u000d\u000aPulse       __________||_________________||_________________||_________________||_________________||_________________||_________________||_________________||_________________||__________\u000d\u000a                               |------- 1s -------| \u000d\u000aAnalog           0%   |           100%        |           70%        |            9%          |            42%        |           38%        |           92%         |            50%        |             0%        |           0%  \u000d\u000a\u000d\u000aOutput     _________|¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|______________________________________________________|¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|______________________________\u000d\u000a","LRI":9,"RRI":10,"VLs":[]}
{"CLs":[{"__type":"FB","In":[{"__type":"PRM","Arg":"MySensor","IO":true,"Type":"THE\\SENSOR","Var":"Sensor_4"},{"__type":"PRM","Arg":"Sensor_Integer","Ix":1,"Type":"INT","Var":""},{"__type":"PRM","Arg":"Sensor_Array","Ix":2,"Type":"ARRAY[0..1] OF BYTE","Var":"AD_FromILM"},{"__type":"PF","Arg":"Enabled"},{"__type":"PRM","Arg":"Input_Min","Ix":3,"Type":"REAL","Var":"0"},{"__type":"PRM","Arg":"Output_Min","Ix":4,"Type":"REAL","Var":"0"},{"__type":"PRM","Arg":"Input_Max","Ix":5,"Type":"REAL","Var":"4000"},{"__type":"PRM","Arg":"Output_Max","Ix":6,"Type":"REAL","Var":"100"},{"__type":"PRM","Arg":"Offset","Ix":7,"Type":"REAL","Var":""},{"__type":"PRM","Arg":"Unit","Ix":8,"Type":"STRING[6]","Var":"'%'"},{"__type":"PRM","Arg":"Average","Ix":9,"Type":"REAL","Var":""},{"__type":"PRM","Arg":"Use_Teaching","Ix":10,"Type":"BOOL","Var":"true"},{"__type":"PRM","Arg":"Use_Limit","Ix":11,"Type":"BOOL","Var":"true"},{"__type":"PRM","Arg":"Commissioning","Ix":12,"Type":"BOOL","Var":"Commissioning"}],"Ix":15,"Name":"Sensor_Analog","Out":[{"__type":"PRM","Arg":"MySensor","IO":true,"Ix":13,"Type":"THE\\SENSOR","Var":"Sensor_4"},{"__type":"PF","Arg":"ENO"},{"__type":"PRM","Arg":"Output","Ix":14,"Type":"REAL","Var":""}],"UD":true,"Var":"Config_Analog"}],"CMT":"An analog signal use the same structure, only the configuration change a bit. It manage to kind of input :\u000d\u000a- Classic analog input (Integer) in \"Sensor_Integer\".\u000d\u000a- Analog input from IL coupler (2 byte array).\u000d\u000aYou juste need to put on of these variable to work, it will be selected inside the FB. It done like this to avoid having two diffrent FB.\u000d\u000a\u000d\u000aThe FB will make directely the scaling with \"In\/Out_Min\/Max\". In this case, i will convert an analog input (0..4000) in 0..100%.\u000d\u000aYou can offset the output value with \"Offset\".\u000d\u000a\u000d\u000aThe \"Unit\" input is to give information on IAG.\u000d\u000a\u000d\u000aIf you need, you can average the value directely in the FB, define the size of the moving average in \"Average\".\u000d\u000a\u000d\u000a\"Use_Teaching\" let the user in commissioning to update \"Input_Min\" and \"Input_Max\" from the HMI with teaching function.\u000d\u000a\u000d\u000aIn the normal case, the scaling is not borned to \"Output_Min\/Max\", but you can limit the output with \"Use_Limit\".","LRI":16,"RRI":17,"VLs":[]}
