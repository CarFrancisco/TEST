{"CLs":[{"__type":"LD","Var":"Enabled"},{"__type":"ST","Ix":1,"Var":"ENO","X":1}],"CMT":"Config","LRI":2,"RRI":3,"VLs":[]}
{"CLs":[{"__type":"LD","Id":"b5073088-8318-48fd-bb02-376d00000007","Up":true,"Var":"Enabled"},{"__type":"F","In":[{"__type":"PF","Arg":"EN"},{"__type":"PRM","Arg":"In1","Ix":1,"Type":"ANY_ELEMENTARY, ENUM","Var":"Offset"},{"__type":"PRM","Arg":"In2","Ix":2,"Type":"ANY_ELEMENTARY, ENUM","Var":"Offset_Backup"}],"Ix":3,"Name":"<>","Out":[{"__type":"PF","Arg":""}],"Y":1},{"__type":"IST","EID":"c8cfa424-c1d4-42d4-9d18-6b62e1272145","H":802.00000000000011,"Ix":4,"TXT":"\/\/Convert the angle, degrees to radian\u000d\u000aFactor\u0009:= COS(DegToRad(Angle));\u000d\u000a\u000d\u000aIF NOT InvertDirection THEN\u000d\u000a\u0009\/\/ Compute position on tape with angle\u000d\u000a\u0009MyLaser.Cmd.Point[0].In \u0009\u0009:= StartRampOffset1 \/ Factor;\u000d\u000a\u0009MyLaser.Cmd.Point[0].Out\u0009:= StartPower;\u000d\u000a\u0009\u0009\u0009\u000d\u000a\u0009MyLaser.Cmd.Point[1].In \u0009\u0009:= StartRampOffset2 \/ Factor;\u000d\u000a\u0009MyLaser.Cmd.Point[1].Out\u0009:= PowerDuring;\u000d\u000a\u0009\u0009\u0009\u000d\u000a\u0009MyLaser.Cmd.Point[2].In\u0009\u0009:= (Length + EndRampOffset1)  \/ Factor;\u000d\u000a\u0009MyLaser.Cmd.Point[2].Out\u0009:= PowerDuring;\u000d\u000a\u0009\u0009\u0009\u000d\u000a\u0009MyLaser.Cmd.Point[3].In\u0009\u0009:= (Length + EndRampOffset2) \/ Factor;\u000d\u000a\u0009MyLaser.Cmd.Point[3].Out\u0009:= EndPower;\u000d\u000aELSE\u000d\u000a\u0009\/\/ Compute position on tape with angle\u000d\u000a\u0009MyLaser.Cmd.Point[0].In \u0009\u0009:= -EndRampOffset2 \/ Factor;\u000d\u000a\u0009MyLaser.Cmd.Point[0].Out\u0009:= EndPower;\u000d\u000a\u0009\u0009\u0009\u000d\u000a\u0009MyLaser.Cmd.Point[1].In \u0009\u0009:= -EndRampOffset1 \/ Factor;\u000d\u000a\u0009MyLaser.Cmd.Point[1].Out\u0009:= PowerDuring;\u000d\u000a\u0009\u0009\u0009\u000d\u000a\u0009MyLaser.Cmd.Point[2].In\u0009\u0009:= (Length - StartRampOffset2)  \/ Factor;\u000d\u000a\u0009MyLaser.Cmd.Point[2].Out\u0009:= PowerDuring;\u000d\u000a\u0009\u0009\u0009\u000d\u000a\u0009MyLaser.Cmd.Point[3].In\u0009\u0009:= (Length - StartRampOffset1) \/ Factor;\u000d\u000a\u0009MyLaser.Cmd.Point[3].Out\u0009:= StartPower;\u000d\u000aEND_IF;\u000d\u000a\u000d\u000a\/\/ Add offset in input point\u000d\u000aMyLaser.Cmd.Point[0].In := MyLaser.Cmd.Point[0].In + Offset;\u000d\u000aMyLaser.Cmd.Point[1].In := MyLaser.Cmd.Point[1].In + Offset;\u000d\u000aMyLaser.Cmd.Point[2].In := MyLaser.Cmd.Point[2].In + Offset;\u000d\u000aMyLaser.Cmd.Point[3].In := MyLaser.Cmd.Point[3].In + Offset;\u000d\u000a\u000d\u000a\/\/Maximum points \u000d\u000ai_Max:=3;\u000d\u000a\u000d\u000a\/\/ Save backup\u000d\u000aOffset_Backup := Offset;","W":1180,"X":1}],"CMT":"Calculs of the real points (with the angle)","LRI":5,"RRI":6,"VLs":[{"Ix":7,"X":1}]}
{"CLs":[{"__type":"LD","Var":"Enabled"},{"__type":"IST","EID":"9b69ac7e-98eb-45e6-b7ed-c214930a422e","H":397.00000000000006,"Ix":1,"TXT":"\/\/When Ref is smaller than the point 0\u000d\u000aIF  Ref <= MyLaser.Cmd.Point[0].In \u0009 Then\u000d\u000a\u0009Ref_Smaller\u0009:= True;\u000d\u000a\u0009Ref_Bigger\u0009:= False;\u000d\u000a\u0009\/\/When Ref is bigger than the point 3\u000d\u000aELSIF Ref >= MyLaser.Cmd.Point[3].In Then\u000d\u000a\u0009Ref_Bigger\u0009:= True;\u000d\u000a\u0009Ref_Smaller\u0009:= False;\u000d\u000aELSE\u000d\u000a\u0009\/\/Detect where the Ref is between our points \u000d\u000a\u0009i\u0009:= 0;\u000d\u000a\u0009Ref_Smaller\u0009:= False;\u000d\u000a\u0009Ref_Bigger\u0009:= False;\u000d\u000a\u0009While Ref > MyLaser.Cmd.Point[i].In Do\u000d\u000a\u0009\u0009i\u0009:=\u0009i+1;\u000d\u000a\u0009END_WHILE;\u000d\u000aEND_IF;","W":937,"X":1}],"CMT":"Check limits and search where the ref is between 2 points","LRI":2,"RRI":3,"VLs":[]}
{"CLs":[{"__type":"LD","Var":"Enabled"},{"__type":"IST","EID":"524a3d52-2134-4871-95fd-f7b955817cb3","H":248,"Ix":1,"TXT":"\/\/Block the Power at the 1st Power when the Ref is smaller than the lowest Point\u000d\u000aIF Ref_Smaller THEN\u000d\u000a\u0009MyLaser.Cmd.Power\u0009:= MyLaser.Cmd.Point[0].Out;\u000d\u000a\/\/Block the Power at the last Power when the Ref is bigger than the biggest Point\u000d\u000aELSIF Ref_Bigger THEN\u000d\u000a\u0009MyLaser.Cmd.Power\u0009:= MyLaser.Cmd.Point[i_Max].Out;\u000d\u000aElse\u000d\u000a\/\/Calculation of power depending of Ref (Power = (Y1-Y0\/X1-X0)(Ref-X0)+Y0)\u000d\u000aMyLaser.Cmd.Power\u0009:=\u0009(( MyLaser.Cmd.Point[i].Out - MyLaser.Cmd.Point[i-1].Out ) \/ (MyLaser.Cmd.Point[i].In - MyLaser.Cmd.Point[i-1].In)) * \u000d\u000a(Ref - MyLaser.Cmd.Point[i-1].In) + MyLaser.Cmd.Point[i-1].Out;\u000d\u000aEND_IF;\u0009\u0009\u0009\u0009\u0009\u0009\u0009","W":1114,"X":1}],"CMT":"Calculation of Power depending of Ref","LRI":2,"RRI":3,"VLs":[]}
