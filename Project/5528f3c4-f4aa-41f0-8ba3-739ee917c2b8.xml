{"CLs":[{"__type":"FB","In":[{"__type":"PRM","Arg":"mySAV","IO":true,"Ix":1,"Type":"THE\\SAV","Var":"SAV"},{"__type":"PF","Arg":"Enabled"}],"Ix":3,"Name":"HMI_SAV","Out":[{"__type":"PRM","Arg":"mySAV","IO":true,"Ix":2,"Type":"THE\\SAV","Var":"SAV"},{"__type":"PF","Arg":"ENO"}],"UD":true,"Var":"ConfigSAV"},{"__type":"ST","Var":"Info_Retain","X":1}],"CMT":"It reminds the customer when to contact customer service to carry out line maintenance.\u000a\u000aPlease note that the \"mySAV\" variable must be retain!\u000a\u000aOn first start-up, if no date is saved in the structure, it will take the current PLC date + 400 days.\u000aRemember to update the PLC time before launching the software, otherwise the service date will be set in 1971.\u000a\u000aThe block will also manage the popup call on the HMI to remind the customer when the maintenance date arrives.\u000aFor this to work, you need to add a global event to the \"mySAV.Sta.Popup_Request\" variable in the NA project to display the specific \"Maint_Popup\" popup.\u000a\u000aThe user can also call up another popup to confirm maintenance. On this , you'll see a random code and an input field. The user must then enter\u000d\u000athe correct value based on the current code. Conversion is carried out by an external CS program.\u000a\u000aWhen the code is validated, a new date will be set with the current date + one year.\u000d\u000aIf you need to manualy reset this value, you can force \"mySAV.Cmd.Done\"!","LRI":4,"RRI":5,"VLs":[]}
